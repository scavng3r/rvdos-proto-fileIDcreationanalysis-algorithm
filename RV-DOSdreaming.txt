//start

please note one must have anytype of      file*.*

///possible to produce output by .rvdos extension adding? and then removal for non file tampering?? and possiblity for portable thru usb 
or sd?   known issues include failure to blutooth transfer of a .rvdos extensioned file to lg g7 one-this issue can be remidied by usb 
file transfer and possibly OTG cable(untested) or transfer of sd card(untested)///

command ((file*)*.scan256) makenotice!<file*.*>makenotice?

file*.*=makenotice! unless makenotice?

file*.*=makenotice? is way of identify.marker creation for unknown$info

process of id creation is is filescan=unknown$info=id.mark\1\repeatonly\nodouble*dumprvdos
tada
file id created and rv'd!



command ((file*)*scan256) comes from system by execution not obeservation
yet Identity.marker is human readable and when viewed
file*.*   

//*.* is the systems queue to intervene unless a hang up is wanted in whic case it may be possible to queue multiple files for scanning 
in succession? 

note the periods are replaced by a ) when executing command so the file DOES under go some fore of change


so...

command ((file*)*scan256)
which translates to

makenotice!<file*.*>makenotice?

each makenotice creates an identity.marker regardless of activity
so

unknown$info=identity.marker"exampletest1001"

when viewed a reinforcingverification-RV is executed and the file notices itself by experimental nodouble* rule on 1\repeatonly

so basically re-verification by this route  ((file*)*scan256 makenotice!<file*.*>makenotice? = unknown$info = 
identity.marker"exampletest1001"= file*.*


\\1\repeatonly\nodouble* if execute double notice only identity marker recieves error for multiple execution in RV-DOS environment.
(EXPERIEMENTAL)

hence the research verifiable part

verification through identity.marker creation which only creates a log of human readable error and puke.
no matter execution environment.
